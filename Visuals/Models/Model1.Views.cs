//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets72177B3774174A1B75769B6114F35DCDCA719847EAAE1EB8F8A47A1B95C7A811))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets72177B3774174A1B75769B6114F35DCDCA719847EAAE1EB8F8A47A1B95C7A811 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets72177B3774174A1B75769B6114F35DCDCA719847EAAE1EB8F8A47A1B95C7A811()
        {
            this.EdmEntityContainerName = "Model1Container";
            this.StoreEntityContainerName = "Model1StoreContainer";
            this.HashOverMappingClosure = "0c94b91cd7129ebfd8a2af1d53bf369ade20a2f58ecbaa5ef7f54cf1ba569987";
            this.HashOverAllExtentViews = "1213695c715c8c5caf949e6bb770ac3ea9d70ab9d15c262176f33dee1e39f156";
            this.ViewCount = 9;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.People
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.People", @"
    SELECT VALUE -- Constructing People
        [Model1.Store.People](T1.People_Id, T1.People_Property1, T1.People_MiniAvatar, T1.People_Link)
    FROM (
        SELECT 
            T.Id AS People_Id, 
            T.Property1 AS People_Property1, 
            T.MiniAvatar AS People_MiniAvatar, 
            T.Link AS People_Link, 
            True AS _from0
        FROM Model1Container.People AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.Posts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.Posts", @"
    SELECT VALUE -- Constructing Posts
        [Model1.Store.Posts](T1.Posts_Id, T1.Posts_Avatar, T1.Posts_AvatarLink, T1.Posts_Message, T1.Posts_PersonId)
    FROM (
        SELECT 
            T.Id AS Posts_Id, 
            T.Avatar AS Posts_Avatar, 
            T.AvatarLink AS Posts_AvatarLink, 
            T.Message AS Posts_Message, 
            T.PersonId AS Posts_PersonId, 
            True AS _from0
        FROM Model1Container.Posts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.Articles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.Articles", @"
    SELECT VALUE -- Constructing Articles
        [Model1.Store.Articles](T3.Articles_Id, T3.Articles_Thumbnail, T3.Articles_Link, T3.Articles_Title, T3.Articles_Synopsis, T3.[Articles.Post_Id])
    FROM (
        SELECT T1.Articles_Id, T2.Articles_Thumbnail, T2.Articles_Link, T2.Articles_Title, T2.Articles_Synopsis, T1.[Articles.Post_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.Article).Id AS Articles_Id, 
                Key(T.Post).Id AS [Articles.Post_Id], 
                True AS _from1
            FROM Model1Container.PostArticle AS T) AS T1
            INNER JOIN (
            SELECT 
                T.Id AS Articles_Id, 
                T.Thumbnail AS Articles_Thumbnail, 
                T.Link AS Articles_Link, 
                T.Title AS Articles_Title, 
                T.Synopsis AS Articles_Synopsis, 
                True AS _from0
            FROM Model1Container.Articles AS T) AS T2
            ON T1.Articles_Id = T2.Articles_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.Comments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.Comments", @"
    SELECT VALUE -- Constructing Comments
        [Model1.Store.Comments](T1.Comments_Id, T1.Comments_Avatar, T1.Comments_User, T1.Comments_AvatarLink, T1.Comments_Message, T1.Comments_PostId)
    FROM (
        SELECT 
            T.Id AS Comments_Id, 
            T.Avatar AS Comments_Avatar, 
            T.User AS Comments_User, 
            T.AvatarLink AS Comments_AvatarLink, 
            T.Message AS Comments_Message, 
            T.PostId AS Comments_PostId, 
            True AS _from0
        FROM Model1Container.Comments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.People
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.People", @"
    SELECT VALUE -- Constructing People
        [Model1.Person](T1.Person_Id, T1.Person_Property1, T1.Person_MiniAvatar, T1.Person_Link)
    FROM (
        SELECT 
            T.Id AS Person_Id, 
            T.Property1 AS Person_Property1, 
            T.MiniAvatar AS Person_MiniAvatar, 
            T.Link AS Person_Link, 
            True AS _from0
        FROM Model1StoreContainer.People AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.Posts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.Posts", @"
    SELECT VALUE -- Constructing Posts
        [Model1.Post](T1.Post_Id, T1.Post_Avatar, T1.Post_AvatarLink, T1.Post_Message, T1.Post_PersonId)
    FROM (
        SELECT 
            T.Id AS Post_Id, 
            T.Avatar AS Post_Avatar, 
            T.AvatarLink AS Post_AvatarLink, 
            T.Message AS Post_Message, 
            T.PersonId AS Post_PersonId, 
            True AS _from0
        FROM Model1StoreContainer.Posts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.Articles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.Articles", @"
    SELECT VALUE -- Constructing Articles
        [Model1.Article](T1.Article_Id, T1.Article_Thumbnail, T1.Article_Link, T1.Article_Title, T1.Article_Synopsis) WITH 
        RELATIONSHIP(CREATEREF(Model1Container.Posts, ROW(T1.PostArticle_Post_Id),[Model1.Post]),[Model1.PostArticle],Article,Post) 
    FROM (
        SELECT 
            T.Id AS Article_Id, 
            T.Thumbnail AS Article_Thumbnail, 
            T.Link AS Article_Link, 
            T.Title AS Article_Title, 
            T.Synopsis AS Article_Synopsis, 
            True AS _from0, 
            T.Post_Id AS PostArticle_Post_Id
        FROM Model1StoreContainer.Articles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.Comments
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.Comments", @"
    SELECT VALUE -- Constructing Comments
        [Model1.Comment](T1.Comment_Id, T1.Comment_Avatar, T1.Comment_User, T1.Comment_AvatarLink, T1.Comment_Message, T1.Comment_PostId)
    FROM (
        SELECT 
            T.Id AS Comment_Id, 
            T.Avatar AS Comment_Avatar, 
            T.User AS Comment_User, 
            T.AvatarLink AS Comment_AvatarLink, 
            T.Message AS Comment_Message, 
            T.PostId AS Comment_PostId, 
            True AS _from0
        FROM Model1StoreContainer.Comments AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.PostArticle
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.PostArticle", @"
    SELECT VALUE -- Constructing PostArticle
        [Model1.PostArticle](T3.PostArticle_Post, T3.PostArticle_Article)
    FROM (
        SELECT -- Constructing Post
            CreateRef(Model1Container.Posts, row(T2.PostArticle_Post_Id), [Model1.Post]) AS PostArticle_Post, 
            T2.PostArticle_Article
        FROM (
            SELECT -- Constructing Article
                T1.PostArticle_Post_Id, 
                CreateRef(Model1Container.Articles, row(T1.PostArticle_Article_Id), [Model1.Article]) AS PostArticle_Article
            FROM (
                SELECT 
                    T.Post_Id AS PostArticle_Post_Id, 
                    T.Id AS PostArticle_Article_Id, 
                    True AS _from0
                FROM Model1StoreContainer.Articles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
